APRIRE UN DB SQLITE DA PHP: 

$sq = sqlite_open(“miodb.db”, 0666, $sqlite_error); 

Il primo parametro è il nome del file che conterrà i nostri dati (se non esiste verrà creato), 
il secondo indica i permessi da associare al database (attualmente il parametro viene ignorato 
da SQLite anche se l’impostazione consigliata è 0666) mentre il terzo conterrà eventualmente una 
stringa con il messaggio di errore eventualmente riscontrato durante l’apertura della fonte di dati. 
In caso sia andato tutto per il verso giusto, $sq conterrà la risorsa che ci permetterà di accedere 
al database miodb.db, altrimenti assumerà un valore nullo. Per questo motivo è sempre buona prassi 
controllare il valore restituito da sqlite_open prima di proseguire. 

----------------------------------------------------------------------------------------------------------------------
INCLUDERE UNA LIBRERIA IN PHP

All'interno di tutti i singoli file preposti ad operare sul DB sarà sufficiente includere il file appena visto, in questo modo:
include "dati-mysql.php";
oppure con
require "dati-mysql.php";

I due comandi include e require producono il medesimo risultato; l'unica differenza consiste nella gestione di eventuali errori: 
nel caso il file da includere non si trovato include() genererà un warning mentre require() un fatal error (bloccando, di fatto, 
l'esecuzione dello script).

------------------------------------------------------------------------------------------------------------------------------
DEFINIRE UNA COSTANTE IN PHP:

define("NOME_COSTANTE", valore_costante);
ehco defined("NOME_COSTANTE");

---------------------------------------------------------------------------------------------------------------------------------
CREARE UN SEMAFORO IN PHP:
resource sem_get ( int $key [, int $max_acquire = 1 [, int $perm = 0666 [, int $auto_release = 1 ]]] )

sem_get() returns an id that can be used to access the System V semaphore with the given key. 
A second call to sem_get() for the same key will return a different semaphore identifier, but 
both identifiers access the same underlying semaphore.
RETURN: true se è andato tutto bene, false se c'è stato un errore.

----------------------------------------------------------------------------------------------------------------------------------
LOCKARE UN SEMAFORO IN PHP:
bool sem_acquire ( resource $sem_identifier [, bool $nowait = FALSE ] );

RETURN: true se è andato tutto bene

----------------------------------------------------------------------------------------------------------------------------------
UNLOCKARE UN SEMAFORO IN PHP:

bool sem_release ( resource $sem_identifier );

RETURN: true se è andato tutto bene 

-----------------------------------------------------------------------------------------------------------------------------------
CONTARE GLI ELEMENTI DI UN ARRAY IN PHP:

int count ( mixed $var [, int $mode ] );

------------------------------------------------------------------------------------------------------------------------------------
